#!/bin/bash

# Script running TestEM3 simulation with identical configuration with GeantV and Geant4
CONFIG_SCRIPT=$1
TRIES=$2
if [ "$CONFIG_SCRIPT" = "" ]; then
  echo "Usage: TestEm3.sh [configuration_script]"
  exit 1
fi
if [ "$TRIES" = "" ]; then
  TRIES=10
fi
. $CONFIG_SCRIPT
INSTALLATION_PATH=@CMAKE_INSTALL_PREFIX@
### Executables
GEANTV_EXEC=$INSTALLATION_PATH/bin/examples/TestEm3/GeantV/TestEm3_GV
GEANT4_EXEC=$INSTALLATION_PATH/bin/examples/TestEm3/Geant4/TestEm3
### Benchmark config and output
BENCH_OUTPUT="${GEANT_PERFTOOLS_FILE/prof/bench}"
BENCH_CONFIG1="${GEANT_PERFTOOLS_FILE/prof_/}"
BENCH_CONFIG2="${BENCH_CONFIG1/.out/}"

echo "### Running TestEm3 for the configuration: ${BENCH_CONFIG2}"
echo "    - primary type:        $GUN_PRIMARY_TYPE"
echo "    - primary energy:      $GUN_PRIMARY_ENERGY"
echo "    - number of threads:   $CONFIG_THREADS"
echo "    - number of events:    $CONFIG_EVENTS"
echo "    - primaries per event: $CONFIG_PRIMARIES"
echo "    - performance mode:    $CONFIG_PERFORMANCE"
echo "    - field present:       $FIELD_ACTIVE"
echo "    - field Runge-Kutta:   $FIELD_USE_RK"
echo "    - basketized field:    $CONFIG_BASKETIZED_FIELD"
echo "    - basketized physics:  $CONFIG_BASKETIZED_PHYSICS"
echo "    - basketized MSC:      $CONFIG_BASKETIZED_MSC"
echo "    - basketized geometry: $CONFIG_BASKETIZED_GEOM"
echo ""

echo "GeantV: testing ${BENCH_CONFIG2}" > $BENCH_OUTPUT

# Run GeantV application
rm -f extracted_realtimes
for i in $(seq 1 $TRIES);
  do
    echo -ne " testing ${i} ..." '\r';
    stdbuf -oL $GEANTV_EXEC --det-number-of-absorbers 2 \
             --det-number-of-layers    50 \
             --det-set-absorber  absorber-index=0,material-name=NIST_MAT_Pb \
             --det-set-absorber  absorber-index=0,thickness=0.23 \
             --det-set-absorber  absorber-index=1,material-name=NIST_MAT_lAr \
             --det-set-absorber  absorber-index=1,thickness=0.57 \
             --det-set-sizeYZ          40 \
             --det-prod-cut-length     0.07 \
             --gun-primary-energy ${GUN_PRIMARY_ENERGY} \
             --gun-primary-type   ${GUN_PRIMARY_TYPE} \
             --config-number-of-buffered-events    16 \
             --config-total-number-of-events ${CONFIG_EVENTS} \
             --config-number-of-primary-per-events ${CONFIG_PRIMARIES} \
             --config-number-of-threads ${CONFIG_THREADS} \
             --config-number-of-propagators 1 \
             --config-tracks-per-basket    64 \
             --field-active ${FIELD_ACTIVE} \
             --field-vector x=0.,y=0,z=0.5 \
             --field-use-RK ${FIELD_USE_RK} \
             --field-eps-RK 0.0003 \
             --field-basketized ${CONFIG_BASKETIZED_FIELD} \
             --process-MSC-step-limit UseSafety \
             --config-run-performance ${CONFIG_PERFORMANCE} \
             --config-vectorized-geom ${CONFIG_BASKETIZED_GEOM} \
             --config-vectorized-physics ${CONFIG_BASKETIZED_PHYSICS} \
             --config-vectorized-MSC ${CONFIG_BASKETIZED_MSC} \
             --config-monitoring      0 \
             >gv.log 2>gv.log;

  grep -o 'RealTime.*' gv.log | sed -r 's/.*RealTime=//g' | sed -r 's/s.CpuTime=[0-9]*\.[0-9]*s//g' >> extracted_realtimes
done
# compute averages and standard deviations
awk -f - extracted_realtimes <<-EOF >> ${BENCH_OUTPUT}
{
    for(i=1; i<=\$TRIES; i++) {
        sum   +=  \$i;
        sumsq += (\$i)^2
    }
}
END {
    printf "Run time for %d measurements = %.3f +/- %.3f\n", $TRIES, sum/$TRIES, sqrt((sumsq-sum^2/$TRIES)/$TRIES);
}
EOF

cat $BENCH_OUTPUT
