// This files was autogenerated by geant::ParticleOld::ReadFile

#if defined(__clang__) && !defined(__APPLE__)
#pragma clang optimize off
#endif
#include "ParticleOld.h"
#ifdef VECCORE_CUDA
#include "base/Vector.h"
template <typename T>
using vector = vecgeom::Vector<T>;
#else
using std::vector;
#endif

namespace geant {
inline namespace GEANT_IMPL_NAMESPACE {


//________________________________________________________________________________
VECCORE_ATT_HOST_DEVICE
void CreateParticle0060() {
   vector<int> daughters;
   ParticleOld *part = nullptr;

   // Creating ~nu_muR
   new ParticleOld("~nu_muR", 2000014, 1, "Sparticle", 100, 0, 500, 0, -100, -1, -100, -1, -1);

   // Creating ~tau_2-
   new ParticleOld("~tau_2-", 2000015, 1, "Sparticle", 100, -1, 500, 1, -100, -1, -100, -1, -1);
   part = const_cast<ParticleOld*>(&ParticleOld::Particles().at(2000015));
   daughters.clear();
   daughters.push_back(1000039);
   daughters.push_back(15);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000024);
   daughters.push_back(16);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000037);
   daughters.push_back(16);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000022);
   daughters.push_back(15);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000023);
   daughters.push_back(15);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000025);
   daughters.push_back(15);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000035);
   daughters.push_back(15);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000015);
   daughters.push_back(23);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000015);
   daughters.push_back(25);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000015);
   daughters.push_back(35);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000015);
   daughters.push_back(36);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000016);
   daughters.push_back(-24);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000016);
   daughters.push_back(-24);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000016);
   daughters.push_back(-37);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000016);
   daughters.push_back(-37);
   part->AddDecay(ParticleOld::Decay(53, 0,  daughters));

   // Creating ~nu_tauR
   new ParticleOld("~nu_tauR", 2000016, 1, "Sparticle", 100, 0, 500, 0, -100, -1, -100, -1, -1);

   // Creating d*
   new ParticleOld("d*", 4000001, 1, "Excited", 100, -0.333333, 400, 2.65171, -100, -1, -100, -1, -1);
   part = const_cast<ParticleOld*>(&ParticleOld::Particles().at(4000001));
   daughters.clear();
   daughters.push_back(21);
   daughters.push_back(1);
   part->AddDecay(ParticleOld::Decay(53, 0.85422,  daughters));
   daughters.clear();
   daughters.push_back(-24);
   daughters.push_back(2);
   part->AddDecay(ParticleOld::Decay(0, 0.096449,  daughters));
   daughters.clear();
   daughters.push_back(23);
   daughters.push_back(1);
   part->AddDecay(ParticleOld::Decay(0, 0.044039,  daughters));
   daughters.clear();
   daughters.push_back(22);
   daughters.push_back(1);
   part->AddDecay(ParticleOld::Decay(0, 0.005292,  daughters));

   // Creating u*
   new ParticleOld("u*", 4000002, 1, "Excited", 100, 0.666667, 400, 2.65499, -100, -1, -100, -1, -1);
   part = const_cast<ParticleOld*>(&ParticleOld::Particles().at(4000002));
   daughters.clear();
   daughters.push_back(21);
   daughters.push_back(2);
   part->AddDecay(ParticleOld::Decay(0, 0.853166,  daughters));
   daughters.clear();
   daughters.push_back(24);
   daughters.push_back(1);
   part->AddDecay(ParticleOld::Decay(0, 0.0963291,  daughters));
   daughters.clear();
   daughters.push_back(23);
   daughters.push_back(2);
   part->AddDecay(ParticleOld::Decay(0, 0.029361,  daughters));
   daughters.clear();
   daughters.push_back(22);
   daughters.push_back(2);
   part->AddDecay(ParticleOld::Decay(0, 0.021144,  daughters));

   // Creating e*-
   new ParticleOld("e*-", 4000011, 1, "Excited", 100, -1, 400, 0.42901, -100, -1, -100, -1, -1);
   part = const_cast<ParticleOld*>(&ParticleOld::Particles().at(4000011));
   daughters.clear();
   daughters.push_back(-24);
   daughters.push_back(12);
   part->AddDecay(ParticleOld::Decay(0, 0.596149,  daughters));
   daughters.clear();
   daughters.push_back(22);
   daughters.push_back(11);
   part->AddDecay(ParticleOld::Decay(0, 0.294414,  daughters));
   daughters.clear();
   daughters.push_back(23);
   daughters.push_back(11);
   part->AddDecay(ParticleOld::Decay(0, 0.109437,  daughters));

   // Creating nu*_e0
   new ParticleOld("nu*_e0", 4000012, 1, "Excited", 100, 0, 400, 0.41917, -100, -1, -100, -1, -1);
   part = const_cast<ParticleOld*>(&ParticleOld::Particles().at(4000012));
   daughters.clear();
   daughters.push_back(24);
   daughters.push_back(11);
   part->AddDecay(ParticleOld::Decay(0, 0.610139,  daughters));
   daughters.clear();
   daughters.push_back(23);
   daughters.push_back(12);
   part->AddDecay(ParticleOld::Decay(0, 0.389861,  daughters));

   // Creating a0(980)0
   new ParticleOld("a0(980)0", 9000111, 1, "Unknown", 100, 0, 0.98, 0.075, -100, 0, -100, -1, -1);

   // Creating a0(980)+
   new ParticleOld("a0(980)+", 9000211, 1, "Unknown", 100, 1, 0.98, 0.06, -100, 0, -100, -1, -1);

   // Creating f0(600)
   new ParticleOld("f0(600)", 9000221, 1, "Unknown", 100, 0, 0.8, 0.8, -100, 0, -100, -1, -1);

   // Creating f0(980)
   new ParticleOld("f0(980)", 9010221, 1, "Unknown", 100, 0, 0.98, 0.07, -100, 0, -100, -1, -1);

   // Creating eta(1405)
   new ParticleOld("eta(1405)", 9020221, 1, "Unknown", 100, 0, 1.4098, 0.0511, -100, 0, -100, -1, -1);

   // Creating f0(1500)
   new ParticleOld("f0(1500)", 9030221, 1, "Unknown", 100, 0, 1.505, 0.109, -100, 0, -100, -1, -1);

   // Creating f2(1810)
   new ParticleOld("f2(1810)", 9030225, 1, "Unknown", 100, 0, 1.815, 0.197, -100, 0, -100, -1, -1);

   // Creating f2(2010)
   new ParticleOld("f2(2010)", 9060225, 1, "Unknown", 100, 0, 2.01, 0.2, -100, 0, -100, -1, -1);

   // Creating Cherenkov
   new ParticleOld("Cherenkov", 50000050, 1, "Unknown", 100, 0, 0, 0, -100, 0, -100, -1, -1);

   // Creating ChargedRootino
   new ParticleOld("ChargedRootino", 50000052, 1, "Unknown", 100, -0.333333, 0, 0, -100, 0, -100, -1, -1);

   // Creating GenericIon
   new ParticleOld("GenericIon", 50000060, 1, "Unknown", 100, 0.333333, 0.938272, 0, -100, 0, -100, -1, -1);

   // Creating N(2220)0
   new ParticleOld("N(2220)0", 100002110, 1, "Unknown", 100, 0, 2.25, 0.4, -100, 0, -100, -1, -1);

   // Creating N(2220)+
   new ParticleOld("N(2220)+", 100002210, 1, "Unknown", 100, 1, 2.25, 0.4, -100, 0, -100, -1, -1);

   // Creating N(2250)0
   new ParticleOld("N(2250)0", 100012110, 1, "Unknown", 100, 0, 2.275, 0.5, -100, 0, -100, -1, -1);

   // Creating N(2250)+
   new ParticleOld("N(2250)+", 100012210, 1, "Unknown", 100, 1, 2.275, 0.5, -100, 0, -100, -1, -1);

   // Creating Deuteron
   new ParticleOld("Deuteron", 1000010020, 1, "ion", 100, 1, 1.87106, 0, -100, 0, -100, -1, -1);

   // Creating Triton
   new ParticleOld("Triton", 1000010030, 1, "ion", 100, 1, 2.80941, 1.6916e-33, -100, 0, -100, -1, -1);

   // Creating HE3
   new ParticleOld("HE3", 1000020030, 1, "ion", 100, 2, 2.80941, 0, -100, 0, -100, -1, -1);

   // Creating Alpha
   new ParticleOld("Alpha", 1000020040, 1, "ion", 100, 2, 3.7284, 1.6916e-33, -100, 0, -100, -1, -1);
}

} // End of inline namespace
} // End of geant namespace
#if defined(__clang__) && !defined(__APPLE__)
#pragma clang optimize on
#endif
