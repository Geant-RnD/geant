// This files was autogenerated by geant::Particle::ReadFile

#if defined(__clang__) && !defined(__APPLE__)
#pragma clang optimize off
#endif
#include "Particle.h"
#ifdef GEANT_NVCC
#include "base/Vector.h"
template <typename T>
using vector = vecgeom::Vector<T>;
#else
using std::vector;
#endif

namespace geant {
inline namespace GEANT_IMPL_NAMESPACE {


//________________________________________________________________________________
GEANT_CUDA_BOTH_CODE
void CreateParticle0058() {
   vector<int> daughters;
   Particle *part = nullptr;

   // Creating ~gravitino
   new Particle("~gravitino", 1000039, 0, "Sparticle", 100, 0, 500, 0, -100, -1, -100, -1, -1);

   // Creating ~d_R
   new Particle("~d_R", 2000001, 1, "Sparticle", 100, -0.333333, 500, 1, -100, -1, -100, -1, -1);
   part = const_cast<Particle*>(&Particle::Particles().at(2000001));
   daughters.clear();
   daughters.push_back(1000039);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000024);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000037);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000022);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000023);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000025);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000035);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(23);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(25);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(35);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(36);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(-24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000002);
   daughters.push_back(-24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(-37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000002);
   daughters.push_back(-37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000021);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));

   // Creating ~u_R
   new Particle("~u_R", 2000002, 1, "Sparticle", 100, 0.666667, 500, 1, -100, -1, -100, -1, -1);
   part = const_cast<Particle*>(&Particle::Particles().at(2000002));
   daughters.clear();
   daughters.push_back(1000039);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000024);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000037);
   daughters.push_back(1);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000022);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000023);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000025);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000035);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(23);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(25);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(35);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000002);
   daughters.push_back(36);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000001);
   daughters.push_back(24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000001);
   daughters.push_back(37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000001);
   daughters.push_back(37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000021);
   daughters.push_back(2);
   part->AddDecay(Particle::Decay(53, 0,  daughters));

   // Creating ~s_R
   new Particle("~s_R", 2000003, 1, "Sparticle", 100, -0.333333, 500, 1, -100, -1, -100, -1, -1);
   part = const_cast<Particle*>(&Particle::Particles().at(2000003));
   daughters.clear();
   daughters.push_back(1000039);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000024);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(-1000037);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000022);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000023);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000025);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000035);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(23);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(25);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(35);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(36);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(-24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000004);
   daughters.push_back(-24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(-37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000004);
   daughters.push_back(-37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000021);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));

   // Creating ~c_R
   new Particle("~c_R", 2000004, 1, "Sparticle", 100, 0.666667, 500, 1, -100, -1, -100, -1, -1);
   part = const_cast<Particle*>(&Particle::Particles().at(2000004));
   daughters.clear();
   daughters.push_back(1000039);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000024);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000037);
   daughters.push_back(3);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000022);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000023);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000025);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000035);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(23);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(25);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(35);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000004);
   daughters.push_back(36);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000003);
   daughters.push_back(24);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000003);
   daughters.push_back(37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(2000003);
   daughters.push_back(37);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
   daughters.clear();
   daughters.push_back(1000021);
   daughters.push_back(4);
   part->AddDecay(Particle::Decay(53, 0,  daughters));
}

} // End of inline namespace
} // End of geant namespace
#if defined(__clang__) && !defined(__APPLE__)
#pragma clang optimize on
#endif
